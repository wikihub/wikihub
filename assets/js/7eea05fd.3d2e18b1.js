"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1718],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var a=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function n(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var m=a.createContext({}),s=function(e){var t=a.useContext(m),r=t;return e&&(r="function"==typeof e?e(t):n(n({},t),e)),r},p=function(e){var t=s(e.components);return a.createElement(m.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,m=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),h=s(r),d=i,c=h["".concat(m,".").concat(d)]||h[d]||u[d]||o;return r?a.createElement(c,n(n({ref:t},p),{},{components:r})):a.createElement(c,n({ref:t},p))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,n=new Array(o);n[0]=h;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l.mdxType="string"==typeof e?e:i,n[1]=l;for(var s=2;s<o;s++)n[s]=r[s];return a.createElement.apply(null,n)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},3834:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return m},metadata:function(){return s},toc:function(){return p},default:function(){return h}});var a=r(7462),i=r(3366),o=(r(7294),r(3905)),n=["components"],l={title:"STM32",linkTitle:"STM32",weight:20,description:"Resources on STM32"},m="Programming frameworks",s={unversionedId:"Hardware/STM32",id:"Hardware/STM32",isDocsHomePage:!1,title:"STM32",description:"Resources on STM32",source:"@site/docs/Hardware/STM32.md",sourceDirName:"Hardware",slug:"/Hardware/STM32",permalink:"/wikihub/docs/Hardware/STM32",editUrl:"https://github.com/wikihub/wikihub/edit/main/docs/Hardware/STM32.md",tags:[],version:"current",frontMatter:{title:"STM32",linkTitle:"STM32",weight:20,description:"Resources on STM32"},sidebar:"tutorialSidebar",previous:{title:"Network",permalink:"/wikihub/docs/Hardware/Network"},next:{title:"Sensors",permalink:"/wikihub/docs/Hardware/Sensors"}},p=[{value:"STM32duino",id:"stm32duino",children:[],level:2},{value:"Mbed",id:"mbed",children:[],level:2},{value:"STM32Cube",id:"stm32cube",children:[],level:2},{value:"Zephyr",id:"zephyr",children:[],level:2},{value:"NuttX",id:"nuttx",children:[],level:2},{value:"ChibiOS",id:"chibios",children:[],level:2}],u={toc:p};function h(e){var t=e.components,r=(0,i.Z)(e,n);return(0,o.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"programming-frameworks"},"Programming frameworks"),(0,o.kt)("h2",{id:"stm32duino"},(0,o.kt)("a",{parentName:"h2",href:"https://github.com/stm32duino/wiki/wiki"},"STM32duino")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.arduinolibraries.info/"},"STM32duino libraries")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/stm32duino/STM32Examples/tree/master/examples/Communication"},"MQTT")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/stm32duino/STM32Examples/tree/master/examples/Boards/STM32L475VG-DISCOVERY-IOT/WiFi_MQTT_Adafruit.io"},"WiFi MQTT")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/stm32duino/STM32Examples/tree/master/examples/Boards/STM32F746NG-DISCOVERY/Ethernet_MQTT_Adafruit.io"},"Ethernet MQTT")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/stm32duino/Arduino_Core_STM32/issues/259"},"No CAN support"))),(0,o.kt)("h2",{id:"mbed"},(0,o.kt)("a",{parentName:"h2",href:"https://os.mbed.com/"},"Mbed")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://os.mbed.com/users/hudakz/code/CAN_Hello//file/3211e88e30a5/main.cpp/"},"CAN Hello"))),(0,o.kt)("h2",{id:"stm32cube"},(0,o.kt)("a",{parentName:"h2",href:"https://www.st.com/en/ecosystems/stm32cube.html"},"STM32Cube")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/STMicroelectronics/STM32CubeF4/tree/b5abca20c9676b04f8d2885a668a9b653ee65705/Projects/STM324xG_EVAL/Examples/CAN/CAN_Networking"},"CAN networking example"))),(0,o.kt)("h2",{id:"zephyr"},(0,o.kt)("a",{parentName:"h2",href:"https://www.zephyrproject.org/"},"Zephyr")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.zephyrproject.org/latest/reference/networking/can_api.html"},"CAN API")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/platformio/platform-ststm32/tree/develop/examples/zephyr-drivers-can"},"CAN driver"))),(0,o.kt)("h2",{id:"nuttx"},(0,o.kt)("a",{parentName:"h2",href:"https://nuttx.apache.org/"},"NuttX")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/MotorolaMobilityLLC/nuttx/tree/master/apps/examples/can"},"CAN example"))),(0,o.kt)("h2",{id:"chibios"},(0,o.kt)("a",{parentName:"h2",href:"http://www.chibios.org/dokuwiki/doku.php?id=chibios:product:start"},"ChibiOS")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.playembedded.org"},"Play Embedded"))),(0,o.kt)("h1",{id:"tutorials"},"Tutorials"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.playembedded.org/blog/from-0-to-stm32/"},"From 0 to STM32"))),(0,o.kt)("h1",{id:"tools"},"Tools"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/stlink-org/stlink"},"ST Link")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.st.com/en/development-tools/stm32cubeprog.html"},"STM32CubeProgrammer")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://my.st.com/content/my_st_com/en/products/development-tools/software-development-tools/stm32-software-development-tools/stm32-programmers/stsw-link004.html"},"ST Link Utility")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.st.com/en/development-tools/stsw-stm32102.html"},"STM32 Virtual COM Port Driver")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.st.com/en/development-tools/stsw-link009.html"},"ST-LINK, ST-LINK/V2, ST-LINK/V2-1 USB driver signed for Windows7, Windows8, Windows10")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.st.com/en/development-tools/stsw-stm32080.html"},"DfuSe USB device firmware upgrade STMicroelectronics extension")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://zadig.akeo.ie/"},"Zadig")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"http://www2.keil.com/mdk5/selector"},"ARM Keil"))),(0,o.kt)("h1",{id:"emulators"},"Emulators"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"http://beckus.github.io/qemu_stm32/"},"QEMU STM32"))),(0,o.kt)("h1",{id:"development-kits"},"Development Kits"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://stm32-base.org/boards/"},"STM32 base boards")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://stm32-base.org/boards/STM32F103C8T6-Blue-Pill"},"STM32F103C8T6 - Blue Pill")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.pjrc.com/teensy-4-0/"},"Teensy 4.0")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://developer.sony.com/develop/spresense/"},"Spresense")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.adafruit.com/product/4177"},"M5Stack Gray Development Kit - ESP32 Dev Board w/ MPU6886+BMM150")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.96boards.org/product/stm32/"},"96boards"))),(0,o.kt)("h1",{id:"b-l475e-iot01a-discovery-kit-for-iot-node"},(0,o.kt)("a",{parentName:"h1",href:"https://www.st.com/en/evaluation-tools/b-l475e-iot01a.html"},"B-L475E-IOT01A Discovery kit for IoT node")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.platformio.org/en/latest/boards/ststm32/disco_l475vg_iot01a.html"},"PlatformIO: ST DISCO-L475VG-IOT01A")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/platformio/platform-ststm32/tree/master/examples?utm_source=platformio&utm_medium=docs"},"Example projects by PlatformIO")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://os.mbed.com/platforms/ST-Discovery-L475E-IOT01A/"},"Mbed for ST Discovery L475E-IOT01A")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://forgge.github.io/B-L475E-IOT01A-thingsboard-read-temperature-and-humidity-using-mbed.html"},"Using thingsboard.io, STM32 B-L475E-IOT01A IoT kit and ARM Mbed to monitor temperature")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://innomatic.home.blog/2018/12/24/fixing-b-l475e-iot01a-board-reset-issue/"},"Fixing L475E-IOT01A MB1297 C-01 reset issue")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.element14.com/community/roadTestReviews/2543/l/stmicroelectronics-discovery-kit-for-iot-node-review"},"Discovery kit for IoT node review")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/nomadpgmr/stm32_blink_vs_code"},"B-L475E-IOT01A and Visual Studio")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.edgeimpulse.com/docs/unboxing-the-st-b-l475e-iot01a"},"Edge Impulse for B-L475E-IOT01A")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Vjmorrison/micropython_B_L475E_IOT01A"},"MicroPython for L475E IOT01A")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://mongoose-os.com/"},"Mongoose OS")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://forgge.github.io/B-L475E-IOT01A-thingsboard-read-temperature-and-humidity-using-mbed.html"},"ThingsBoard")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.mouser.ca/applications/stm32l4-kit-iot-node-integrating-google-cloud/"},"Google Cloud Platform"))),(0,o.kt)("h1",{id:"stm32f407g-discovery"},(0,o.kt)("a",{parentName:"h1",href:"https://www.st.com/en/evaluation-tools/stm32f4discovery.html"},"STM32F407G-DISCOVERY")),(0,o.kt)("h1",{id:"stm32f469idiscovery"},(0,o.kt)("a",{parentName:"h1",href:"https://www.st.com/en/evaluation-tools/32f469idiscovery.html"},"STM32F469IDISCOVERY")),(0,o.kt)("h1",{id:"dfu"},"DFU"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.digikey.com/en/articles/update-firmware-field-using-microcontroller-dfu-mode"},"Update firmware field using microcontroller DFU mode"))),(0,o.kt)("h1",{id:"ethernet"},"Ethernet"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/stm32duino/STM32Ethernet"},"STM32 Ethernet"))),(0,o.kt)("h1",{id:"mqtt"},"MQTT"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/ARMmbed/mbed-mqtt"},"Mbed MQTT"))),(0,o.kt)("h1",{id:"ota"},"OTA"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.gizwits.com/en-us/UserManual/MCUOTA.html"},"Gizwits MCU OTA"))),(0,o.kt)("h1",{id:"thingsboard"},"ThingsBoard"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://thingsboard.io/docs/getting-started-guides/helloworld/"},"ThingsBoard"))),(0,o.kt)("h1",{id:"ide"},"IDE"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://platformio.org/"},"Platform IO")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.platformio.org/en/latest/ide/vscode.html"},"Platform IO on VS Code"))),(0,o.kt)("h1",{id:"frameworks"},"Frameworks"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.basicpi.org/documentation/easyipc/"},"easyIPC"))))}h.isMDXComponent=!0}}]);